.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "" ""1"" "" "0.12.0"
.SH NAME
pyocd-gdbserver \- ARM Cortex-M programming tool
.SH DESCRIPTION
.sp
\fBpyocd\-gdbserver\fP is an ARM Cortex\-M programming tool
.SS Summary
.sp
pyOCD is an Open Source python based library for programming
and debugging ARM Cortex\-M microcontrollers using CMSIS\-DAP.
.sp
Includes support for flashing new binaries, resetting the device,
halt, step, resume read/write memory and set/remove breakpoints.
.SS Support
.sp
Firmware files included in the upstream source are NOT included in the
Debian package due to a lack of source code. Target files can be
downloaded separately from  <https://github.com/mbedmicro/pyOCD/tree/master/binaries> 
.sp
Available targets for use with \-\-target option: lpc824, kinetis, w7500,
kv11z7, lpc4088qsb, kv10z7, k20d50m, ncs36510, kl28z, kl25z, k82f25615,
k28f15, maxwsnenv, max32600mbed, k22fa12, lpc4088, lpc4330, ke18f16, kl46z,
stm32f103rc, kl82z7, lpc54114, kl43z4, kl26z, lpc11xx_32, lpc800, rtl8195am,
kl05z, lpc1768, kw41z4, lpc4088dm, stm32f051, cortex_m, lpc11u24, kl02z,
kw01z4, k64f, k22f, ke15z7, nrf51, nrf52, kl27z4, kw40z4, k66f18
.SS Usage
.INDENT 0.0
.TP
.B usage: pyocd\-gdbserver [\-h] [\-\-version] [\-p PORT_NUMBER] [\-T TELNET_PORT] [\-\-allow\-remote] [\-b BOARD_ID] [\-l] [\-\-list\-targets]
[\-\-json] [\-d LEVEL] [\-t TARGET] [\-n] [\-r] [\-C VECTOR_CATCH] [\-s] [\-f FREQUENCY] [\-o] [\-bh]
[\-ce | \-se] [\-u] [\-hp] [\-fp] [\-S] [\-G] [\-c CMD [CMD ...]] [\-da DAPARG [DAPARG ...]]
.UNINDENT
.sp
PyOCD GDB Server
.INDENT 0.0
.TP
.B optional arguments:
.INDENT 7.0
.TP
.B  \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.B  \-\-version
show program\(aqs version number and exit
.TP
.BI \-p \ PORT_NUMBER\fR,\fB \ \-\-port \ PORT_NUMBER
Write the port number that GDB server will open.
.TP
.BI \-T \ TELNET_PORT\fR,\fB \ \-\-telnet\-port \ TELNET_PORT
Specify the telnet port for semihosting.
.TP
.B  \-\-allow\-remote
Allow remote TCP/IP connections (default is no).
.TP
.BI \-b \ BOARD_ID\fR,\fB \ \-\-board \ BOARD_ID
Connect to board by board id. Use \-l to list all connected boards.
.TP
.B  \-l\fP,\fB  \-\-list
List all connected boards.
.TP
.B  \-\-list\-targets
List all available targets.
.TP
.B  \-\-json
Output lists in JSON format. Only applies to \-\-list and \-\-list\-targets.
.TP
.BI \-d \ LEVEL\fR,\fB \ \-\-debug \ LEVEL
Set the level of system logging output. Supported choices are: debug, info, warning, critical, error
.TP
.BI \-t \ TARGET\fR,\fB \ \-\-target \ TARGET
Override target to debug. \-n, \-\-nobreak         Disable halt at hardfault handler. (Deprecated)
.TP
.B  \-r\fP,\fB  \-\-reset\-break
Halt the target when reset. (Deprecated)
.UNINDENT
.INDENT 7.0
.TP
.B \-C VECTOR_CATCH, \-\-vector\-catch VECTOR_CATCH Enable vector catch sources, one letter per enabled source in any order, or \(aqall\(aq or \(aqnone\(aq. (h=hard
fault, b=bus fault, m=mem fault, i=irq err, s=state
err, c=check err, p=nocp, r=reset, a=all, n=none).
(Default is hard fault.)
.UNINDENT
.INDENT 7.0
.TP
.B  \-s\fP,\fB  \-\-step\-int
Allow single stepping to step into interrupts.
.TP
.BI \-f \ FREQUENCY\fR,\fB \ \-\-frequency \ FREQUENCY
Set the SWD clock frequency in Hz.
.TP
.B  \-o\fP,\fB  \-\-persist
Keep GDB server running even after remote has detached.
.TP
.BI \-b\fB h\fR,\fB \ \-\-soft\-bkpt\-as\-hard
Replace software breakpoints with hardware breakpoints.
.TP
.BI \-c\fB e\fR,\fB \ \-\-chip_erase
Use chip erase when programming.
.TP
.BI \-s\fB e\fR,\fB \ \-\-sector_erase
Use sector erase when programming.
.TP
.B  \-u\fP,\fB  \-\-unlock
Unlock the device.
.TP
.BI \-h\fB p\fR,\fB \ \-\-hide_progress
Don\(aqt display programming progress.
.TP
.BI \-f\fB p\fR,\fB \ \-\-fast_program
Use only the CRC of each page to determine if it already has the same data.
.TP
.B  \-S\fP,\fB  \-\-semihosting
Enable semihosting.
.TP
.B  \-G\fP,\fB  \-\-gdb\-syscall
Use GDB syscalls for semihosting file I/O.
.UNINDENT
.sp
\-c CMD [CMD ...], \-\-command CMD [CMD ...]    Run command (OpenOCD compatibility).
.sp
\-da DAPARG [DAPARG ...], \-\-daparg DAPARG [DAPARG ...]   Send setting to DAPAccess layer.
.UNINDENT
.SH COPYRIGHT
2006-2013 ARM Limited
.\" Generated by docutils manpage writer.
.
